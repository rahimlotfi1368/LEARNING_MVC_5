// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MY_APPLICATION.Controllers
{
    public partial class LearningViewsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected LearningViewsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public LearningViewsController Actions { get { return MVC.LearningViews; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "LearningViews";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "LearningViews";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string learn01 = "learn01";
            public readonly string learn02 = "learn02";
            public readonly string learn03 = "learn03";
            public readonly string learn04 = "learn04";
            public readonly string learn05 = "learn05";
            public readonly string learn06 = "learn06";
            public readonly string learn07 = "learn07";
            public readonly string learn08 = "learn08";
            public readonly string learn09 = "learn09";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string learn01 = "learn01";
            public const string learn02 = "learn02";
            public const string learn03 = "learn03";
            public const string learn04 = "learn04";
            public const string learn05 = "learn05";
            public const string learn06 = "learn06";
            public const string learn07 = "learn07";
            public const string learn08 = "learn08";
            public const string learn09 = "learn09";
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _ViewStart = "_ViewStart";
                public readonly string Index = "Index";
                public readonly string learn02 = "learn02";
                public readonly string learn03 = "learn03";
                public readonly string learn04 = "learn04";
                public readonly string learn05 = "learn05";
                public readonly string learn06 = "learn06";
                public readonly string learn07 = "learn07";
                public readonly string learn08 = "learn08";
                public readonly string learn09 = "learn09";
            }
            public readonly string _ViewStart = "~/Views/LearningViews/_ViewStart.cshtml";
            public readonly string Index = "~/Views/LearningViews/Index.cshtml";
            public readonly string learn02 = "~/Views/LearningViews/learn02.cshtml";
            public readonly string learn03 = "~/Views/LearningViews/learn03.cshtml";
            public readonly string learn04 = "~/Views/LearningViews/learn04.cshtml";
            public readonly string learn05 = "~/Views/LearningViews/learn05.cshtml";
            public readonly string learn06 = "~/Views/LearningViews/learn06.cshtml";
            public readonly string learn07 = "~/Views/LearningViews/learn07.cshtml";
            public readonly string learn08 = "~/Views/LearningViews/learn08.cshtml";
            public readonly string learn09 = "~/Views/LearningViews/learn09.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_LearningViewsController : MY_APPLICATION.Controllers.LearningViewsController
    {
        public T4MVC_LearningViewsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn01Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn01()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn01);
            learn01Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn02Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn02()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn02);
            learn02Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn03Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn03()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn03);
            learn03Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn04Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn04()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn04);
            learn04Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn05Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn05()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn05);
            learn05Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn06Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn06()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn06);
            learn06Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn07Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn07()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn07);
            learn07Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn08Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn08()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn08);
            learn08Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void learn09Override(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult learn09()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.learn09);
            learn09Override(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
