@model Models.User
@using Infrastracture

@{
    string title = "Edit User Information";
    ViewBag.Title = title;
}

<h2>
    @(title)
</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken() //در هر فرمی این باید باشد

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, labelText: "RolId", htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9 ">
                <div class="checkbox">
                    @Html.DropDownList(name: "RoleId", selectList: (SelectList)ViewBag.RoleId, optionLabel: "Select an Item...", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">

                @Html.EditorFor(model => model.Username)
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">

                @Html.EditorFor(model => model.Password)
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">

                @Html.EditorFor(model => model.FullName)
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                @Html.RlxButton(caption: "Save", buttonType: Rlx.Enums.ButtonType.submit, buttonStyle: Rlx.Enums.ButtonStyle.Primary, buttonSize: Rlx.Enums.ButtonSize.Large)
                @Html.RlxButton(caption: "Reset", buttonType: Rlx.Enums.ButtonType.reset, buttonStyle: Rlx.Enums.ButtonStyle.Default, buttonSize: Rlx.Enums.ButtonSize.Large)
            </div>
        </div>
    </div>
}

<div class="row">
    <div class="col-sm-12">
        @Html.ActionLink(linkText: "Back To List", actionName: "Index", controllerName: "Users", routeValues: new { Area = "LearningModelArea" }, htmlAttributes: new { @class = "navbar-brand" }) |
        @Html.ActionLink(linkText: "Details", actionName: "Details", controllerName: "Users", routeValues: new { Area = "LearningModelArea", Id = Model.Id }, htmlAttributes: new { @class = "navbar-brand" }) |
        @Html.ActionLink(linkText: "Delete", actionName: "Delete", controllerName: "Users", routeValues: new { Area = "LearningModelArea", Id = Model.Id }, htmlAttributes: new { @class = "navbar-brand" })
    </div>
</div>
















